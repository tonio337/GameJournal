4/10/19

Just performed a rebase on my project.

The branch dealing with external database connections extended way past its purpose.

Performed a rebase rather than a merge, to get master back to a single state.
db branch was nowhere near function ready, and was starting to encroach on other master features.

Will continue expanding on master, and move to branches when more appropriate.

4/3/19

Took an extended break...

First priority will be to ensure Journal and Entry activities are minimalistically working.

Second priority will be to conflate the two into a single activity with multiple fragments (views).

3/20/19

Incorporated MockK library to introduce mock testing.

Need to determine how it's useful and when to appropriately use it.

3/19/19

Feel like I'm starting to lose control of this project. So I'm going to back up and reassess.

I have 3 different activities, a Journal Viewer, a Entry Viewer/Editor, and a Game DB Viewer/Adder.

I'm now using Volley to submit http requests. khttp would require managing Coroutines, since network requests should never be run on the Main thread.

I'm also using Room to create a persistent database for local game storage. I will need to create another table for Entry storage.

I'll likely refactor some of my functions to more accurately fit within this mold.

3/12/19

Signed up for Giant Bomb API instead. Gained successful requests.

Added khttp library for easy times.

Adjusted Game class to hold resID (as defined by Giant Bomb). Also can request by resID as well as query for a given term.

Game On!

3/11/19

Reconsidering the use of IGDB, as their LiveData tests gives 403 - Forbidden errors. Also, Java's HTTP requests sucks.

Will attempt once more with khttp library. Then likely find another game database that works.

3/9/19

Walked through Android Room with a View codelab (https://codelabs.developers.google.com/codelabs/android-room-with-a-view-kotlin/)

Set up Room with the Game class. Created GamesActivity to display currently saved games.

Intend to add options to lookup from IDGB, to locally add or remove games.

May add option to add game data offline, then sync with official IDGB game entry once back online.

3/8/19

Added resource strings and removed hard-coded strings from UI.

Added set up for Room Persistence Database, which will be used to store local Game data.

3/7/19

Added FAB functionality for both new and editable entries. Intent extras aren't quite passing right, but I'll get there.

3/6/19

Added a "static factory" function to Journal to more efficiently create a demo, or dummy, journal in which to test with.

Created text fields on Journal Activity to display dummy data within the app.

Created Entry Activity layout to use for viewing, editing, and creating new journal entries.

3/3/19

Prior to today, made a bare-bones skeleton UI in Android app. Added types for Game and Journal (with internal Entry).  Started to populate sample data (manually, could not get SampleData Android Tools function to work).

Today, expanded Journal functionality the littlest bit and expanded Unit test (63% coverage as of today). Installed and configured Git local repository. Pushed out to remote repository on Github. (Also made prior personal repoistories on Github private.)

Established API key for IDGB game database. Intend to use IDGB for game data lookup rather than storing it manually.

Finally, will likely use this file's notes to base the commit message, until I'm more comfortable with Git commits.